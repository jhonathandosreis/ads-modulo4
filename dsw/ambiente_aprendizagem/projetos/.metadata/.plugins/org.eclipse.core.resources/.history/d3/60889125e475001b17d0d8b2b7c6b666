package com.jhonathanreis.backend.rest;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.NestedRuntimeException;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.jhonathanreis.backend.dao.DisciplinaDao;
import com.jhonathanreis.backend.entidade.Disciplina;

@RestController
@RequestMapping("disciplina")
public class DisciplinaRest {

	@Autowired
	private DisciplinaDao disciplinaDao;
	
	@ExceptionHandler({ NestedRuntimeException.class })
	public ResponseEntity<Object> handleException(NestedRuntimeException ex) {
		return ResponseEntity.badRequest().body(ex.getMostSpecificCause().getMessage());
	}

	@GetMapping
	public List<Disciplina> get() {
		return disciplinaDao.findAll();
	}

	@PostMapping
	public ResponseEntity<Object> post(@RequestBody Disciplina object) throws Exception {
		
		return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("DISCIPLINA_PESSOA_INEXISTENTE");

	}

	@DeleteMapping("/{id}")
	public void delete(Long id) {
		disciplinaDao.deleteById(id);
	}

	@PutMapping
	public void put(@RequestBody Disciplina disciplina) {
		disciplinaDao.save(disciplina);
	}
}
